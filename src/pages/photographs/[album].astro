---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import { getMediaUrl } from '../../lib/mediaUrl';

export async function getStaticPaths() {
  const photoAlbums = await getCollection('photos');
  return photoAlbums.map((album) => ({
    params: { album: album.id },
    props: { album }
  }));
}

interface Props {
  album: CollectionEntry<'photos'>;
}

const { album } = Astro.props;
const { data } = album;
---

<MainLayout title={`${data.title} - Photographs`}>
  <div class="album-container">
    <header class="album-header">
      <h1 class="album-title">{data.title}</h1>
      {data.description && (
        <p class="album-description">{data.description}</p>
      )}
    </header>

    <div class="photos-grid">
      {data.photos.map((photo, index) => (
        <a href={`/photographs/${album.id}/${index}`} class="photo-link">
          <div class="photo-container">
            <Image 
              src={getMediaUrl(photo.src)}
              alt={photo.caption}
              class="photo"
              width={800}
              height={600}
              loading={index < 8 ? "eager" : "lazy"}
              layout="constrained"
            />
            <div class="photo-overlay">
              <p class="photo-caption">{photo.caption}</p>
            </div>
          </div>
        </a>
      ))}
    </div>

    <nav class="album-nav">
      <a href="/photographs" class="back-link">‚Üê Back to Albums</a>
    </nav>
  </div>
</MainLayout>

<style>
  .album-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .album-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .album-title {
    font-size: 2.5rem;
    margin: 0 0 1rem 0;
    color: #333;
  }

  body.dark-mode .album-title {
    color: #fff;
  }

  .album-description {
    font-size: 1.1rem;
    color: #666;
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  body.dark-mode .album-description {
    color: #aaa;
  }

  .photos-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .photo-link {
    display: block;
    color: inherit;
    text-decoration: none;
  }

  .photo-container {
    position: relative;
    overflow: hidden;
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .photo-container:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  body.dark-mode .photo-container {
    box-shadow: 0 2px 8px rgba(255, 255, 255, 0.05);
  }

  body.dark-mode .photo-container:hover {
    box-shadow: 0 4px 16px rgba(255, 255, 255, 0.1);
  }

  .photo {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 0.3s ease;
  }

  .photo-container:hover .photo {
    transform: scale(1.05);
  }

  .photo-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
    padding: 2rem 1rem 1rem;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .photo-container:hover .photo-overlay {
    opacity: 1;
  }

  .photo-caption {
    margin: 0;
    color: white;
    font-size: 0.9rem;
    text-align: center;
    font-weight: 500;
  }

  .album-nav {
    text-align: center;
    padding-top: 2rem;
    border-top: 1px solid #eee;
  }

  body.dark-mode .album-nav {
    border-top-color: #333;
  }

  .back-link {
    color: #666;
    text-decoration: none;
    font-size: 1rem;
    transition: color 0.2s ease;
  }

  .back-link:hover {
    color: #333;
  }

  body.dark-mode .back-link {
    color: #aaa;
  }

  body.dark-mode .back-link:hover {
    color: #fff;
  }

  @media (max-width: 768px) {
    .album-container {
      padding: 1rem;
    }

    .album-title {
      font-size: 2rem;
    }

    .photos-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
  }
</style>